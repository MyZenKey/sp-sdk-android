apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def CLASSIFIER_JAVADOC = 'javadoc'
def CLASSIFIER_SOURCES = 'sources'
def CLASSIFIER_TEST_REPORT = 'test-report'
def PUBLISHING_GROUP = 'publishing'

group = "com.xci.android"

task generateSourceJar(type: Jar) {
    group PUBLISHING_GROUP
    setDescription('Generates source Archive')
    classifier CLASSIFIER_SOURCES
    from android.sourceSets.main.kotlin.srcDirs
}

task generateJacocoTestReportJar(type: Jar) {
    group PUBLISHING_GROUP
    setDescription('Generates Jacoco Test report Archive')
    classifier = CLASSIFIER_TEST_REPORT
}

task generateDocumentationJar(type: Jar) {
    group PUBLISHING_GROUP
    setDescription('Generates Documentation Archive')
    classifier = CLASSIFIER_JAVADOC
}

publishing {
    def key = System.getenv("GITHUB_TOKEN")
    repositories {
        maven {
            url "https://maven.pkg.github.com/MyZenKey/sp-sdk-android"
            credentials {
                username = "myzenkey"
                password = "${key}"
            }
        }
    }
    publications {
        android.libraryVariants.all { variant ->
            variant.outputs.all { output ->
                if (outputFile != null && outputFileName.endsWith('.aar')) {
                    outputFileName = "${project.name}-${project.version}.aar"
                }
            }
            "${variant.name}"(MavenPublication) {
                from components.findByName("android${variant.name.capitalize()}")
                def mavenArtifactPath = "${buildDir}/outputs/aar/${project.name}-${variant.name}.aar"
                groupId = this.group
                artifactId project.name

                version project.version
                artifact mavenArtifactPath
                artifact generateSourceJar
                artifact generateJacocoTestReportJar
                artifact generateDocumentationJar

                pom{
                    name = project.name
                    url = 'https://myzenkey.com/'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    withXml {
                        // add dependencies to pom
                        def dependencies = asNode().appendNode("dependencies")
                        configurations.implementation.allDependencies.forEach {
                            if (it.group != null &&
                                    "unspecified" != it.name &&
                                    it.version != null) {

                                def dependencyNode = dependencies.appendNode("dependency")
                                dependencyNode.appendNode("groupId", it.group)
                                dependencyNode.appendNode("artifactId", it.name)
                                dependencyNode.appendNode("version", it.version)
                            }
                        }
                    }
                }
            }
        }
    }
}